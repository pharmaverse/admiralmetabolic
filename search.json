[{"path":"https://pharmaverse.github.io/admiralmetabolic/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralmetabolic/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://pharmaverse.github.io/admiralmetabolic/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://pharmaverse.github.io/admiralmetabolic/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://pharmaverse.github.io/admiralmetabolic/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://pharmaverse.github.io/admiralmetabolic/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://pharmaverse.github.io/admiralmetabolic/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://pharmaverse.github.io/admiralmetabolic/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://pharmaverse.github.io/admiralmetabolic/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://pharmaverse.github.io/admiralmetabolic/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://pharmaverse.github.io/admiralmetabolic/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright 2024 F. Hoffmann-La Roche AG and Novo Nordisk A/S  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://pharmaverse.github.io/admiralmetabolic/articles/admiralmetabolic.html","id":"support","dir":"Articles","previous_headings":"","what":"Support","title":"Get Started","text":"Support provided via pharmaverse Slack.","code":""},{"path":"https://pharmaverse.github.io/admiralmetabolic/articles/advs.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Creating a Metabolic ADVS ADaM","text":"article describes creating vital signs ADaM metabolic clinical trials. advise first consult admiral Creating BDS Finding ADaM vignette. programming workflow around creating general set-ADVS using admiral functions . vignette, focus common endpoints derivations mainly found metabolic trials avoid repeating information maintaining content two places. , code vignette completely executable; recommend consulting ADVS template script view full workflow.","code":""},{"path":"https://pharmaverse.github.io/admiralmetabolic/articles/advs.html","id":"required-packages","dir":"Articles","previous_headings":"Introduction","what":"Required Packages","title":"Creating a Metabolic ADVS ADaM","text":"examples vignette require following packages.","code":"library(admiral) library(admiralmetabolic) library(pharmaversesdtm) library(dplyr)"},{"path":"https://pharmaverse.github.io/admiralmetabolic/articles/advs.html","id":"programming-workflow","dir":"Articles","previous_headings":"","what":"Programming Workflow","title":"Creating a Metabolic ADVS ADaM","text":"Read Data Assign PARAMCD, PARAM, PARAMN, PARCAT1 Derive Additional Parameters (e.g. BMI ADVS) Derive Categorization Variables (AVALCATx, BASECATx) Derive Criterion Variables (CRITy, CRITyFL, CRITyFLN) Remaining ADVS Set-","code":""},{"path":"https://pharmaverse.github.io/admiralmetabolic/articles/advs.html","id":"readdata","dir":"Articles","previous_headings":"Programming Workflow","what":"Read in Data","title":"Creating a Metabolic ADVS ADaM","text":"start, data frames needed creation ADVS loaded global environment. Reading data usually company specific process, however, purpose vignette, use example data pharmaversesdtm admiral. utilize DM, VS ADSL basis ADVS. Within vignette, DM used basis ADSL: following steps merge ADSL variables source data derive usual ADVS analysis variables. Note sections required vignette covered following steps. get detailed guidance steps, refer admiral Creating BDS Finding ADaM vignette.","code":"dm_metabolic <- admiralmetabolic::dm_metabolic vs_metabolic <- admiralmetabolic::vs_metabolic admiral_adsl <- admiral::admiral_adsl  dm <- convert_blanks_to_na(dm_metabolic) vs <- convert_blanks_to_na(vs_metabolic) admiral_adsl <- convert_blanks_to_na(admiral_adsl) # Retrieve required variables from admiral ADSL for this vignette that are not present in DM dataset adsl <- dm %>%   select(-DOMAIN) %>%   mutate(TRT01P = ARM, TRT01A = ACTARM) %>%   left_join(admiral_adsl %>% select(USUBJID, TRTSDT, TRTEDT), by = \"USUBJID\")"},{"path":"https://pharmaverse.github.io/admiralmetabolic/articles/advs.html","id":"paramcd","dir":"Articles","previous_headings":"Programming Workflow","what":"Assign PARAMCD, PARAM, PARAMN, PARCAT1","title":"Creating a Metabolic ADVS ADaM","text":"next step assign parameter level values PARAMCD, PARAM, PARAMN, PARCAT1, etc. , lookup can created based SDTM --TESTCD value join source data. One key addition metabolic trials vital sign parameters associated body measurements, BMI, HIPCIR, WSTCIR. lookup may now joined source data parameters look like:","code":"param_lookup <- tribble(   ~VSTESTCD, ~PARAMCD, ~PARAM, ~PARAMN, ~PARCAT1, ~PARCAT1N,   \"HEIGHT\", \"HEIGHT\", \"Height (cm)\", 1, \"Subject Characteristic\", 1,   \"WEIGHT\", \"WEIGHT\", \"Weight (kg)\", 2, \"Subject Characteristic\", 1,   \"BMI\", \"BMI\", \"Body Mass Index(kg/m^2)\", 3, \"Subject Characteristic\", 1,   \"HIPCIR\", \"HIPCIR\", \"Hip Circumference (cm)\", 4, \"Subject Characteristic\", 1,   \"WSTCIR\", \"WSTCIR\", \"Waist Circumference (cm)\", 5, \"Subject Characteristic\", 1,   \"DIABP\", \"DIABP\", \"Diastolic Blood Pressure (mmHg)\", 6, \"Vital Sign\", 2,   \"PULSE\", \"PULSE\", \"Pulse Rate (beats/min)\", 7, \"Vital Sign\", 2,   \"SYSBP\", \"SYSBP\", \"Systolic Blood Pressure (mmHg)\", 8, \"Vital Sign\", 2,   \"TEMP\", \"TEMP\", \"Temperature (C)\", 9, \"Vital Sign\", 2 ) advs <- derive_vars_merged_lookup(   advs,   dataset_add = param_lookup,   new_vars = exprs(PARAMCD, PARAM, PARAMN, PARCAT1, PARCAT1N),   by_vars = exprs(VSTESTCD) )"},{"path":"https://pharmaverse.github.io/admiralmetabolic/articles/advs.html","id":"derive_param","dir":"Articles","previous_headings":"Programming Workflow","what":"Derive Additional Parameters (e.g. BMI for ADVS)","title":"Creating a Metabolic ADVS ADaM","text":"metabolic trials, BMI often calculated source. creating ADVS dataset, re-derive BMI collected height weight values. done ensure BMI calculated consistently across subjects visits. step, create parameter Body Mass Index (BMI) ADVS domain using derive_param_bmi() function. Note variables specified by_vars argument populated newly created records. Also note height collected subject use constant_by_vars specify function merge subject-level variable - otherwise BMI calculated visits collected.","code":"# Removing BMI collected at source from the dataset advs <- advs %>% filter(!VSTESTCD == \"BMI\")  advs <- derive_param_bmi(   advs,   by_vars = c(     get_admiral_option(\"subject_keys\"),     exprs(!!!adsl_vars, VISIT, VISITNUM, ADT, ADY, VSTPT, VSTPTNUM)   ),   set_values_to = exprs(     PARAMCD = \"BMI\",     PARAM = \"Body Mass Index (kg/m^2)\",     PARAMN = 3,     PARCAT1 = \"Subject Characteristic\",     PARCAT1N = 1   ),   get_unit_expr = VSSTRESU,   filter = VSSTAT != \"NOT DONE\" | is.na(VSSTAT),   constant_by_vars = exprs(USUBJID) )"},{"path":"https://pharmaverse.github.io/admiralmetabolic/articles/advs.html","id":"common_endpoints","dir":"Articles","previous_headings":"Programming Workflow","what":"Common Metabolic Endpoints","title":"Creating a Metabolic ADVS ADaM","text":"following sections, explore common endpoints typically observed metabolic trials. One endpoint improvement weight category baseline end treatment, often assessed using Body Mass Index (BMI). capture , derive variables AVALCATy BASECATy, detailed subsequent section. Additionally, achievement weight reduction thresholds, ≥ 5%, ≥ 10%, ≥ 15% baseline end treatment certain visit, common endpoint metabolic trials. accommodate criteria, derive relevant criterion variables CRITy, CRITyFL, CRITyFLN, necessary functions provided admiral outlined .","code":""},{"path":"https://pharmaverse.github.io/admiralmetabolic/articles/advs.html","id":"cat","dir":"Articles","previous_headings":"Programming Workflow > Common Metabolic Endpoints","what":"Derive Categorization Variables (AVALCATx, BASECATx)","title":"Creating a Metabolic ADVS ADaM","text":"admiral currently generic function aid assigning AVALCATy/ AVALCAvN BASECATy/ BASECAvN values. simple example values may assigned: similar way, create BASECATy/ BASECAvN variables.","code":"avalcat_lookup <- tibble::tribble(   ~PARAMCD, ~AVALCA1N, ~AVALCAT1,   \"BMI\",    1,         \"Underweight\",   \"BMI\",    2,         \"Normal weight\",   \"BMI\",    3,         \"Overweight\",   \"BMI\",    4,         \"Obesity class I\",   \"BMI\",    5,         \"Obesity class II\",   \"BMI\",    6,         \"Obesity class III\",   \"BMI\",    NA,        NA_character_ )  format_avalcat1n <- function(param, aval) {   case_when(     param == \"BMI\" & aval < 18.5 ~ 1,     param == \"BMI\" & aval >= 18.5 & aval < 25 ~ 2,     param == \"BMI\" & aval >= 25 & aval < 30 ~ 3,     param == \"BMI\" & aval >= 30 & aval < 35 ~ 4,     param == \"BMI\" & aval >= 35 & aval < 40 ~ 5,     param == \"BMI\" & aval >= 40 ~ 6,     TRUE ~ NA_real_   ) }  advs <- advs %>%   mutate(AVALCA1N = format_avalcat1n(param = PARAMCD, aval = AVAL)) %>%   derive_vars_merged(     avalcat_lookup,     by = exprs(PARAMCD, AVALCA1N)   ) basecat_lookup <- tibble::tribble(   ~PARAMCD, ~BASECA1N, ~BASECAT1,   \"BMI\",    1,         \"Underweight\",   \"BMI\",    2,         \"Normal weight\",   \"BMI\",    3,         \"Overweight\",   \"BMI\",    4,         \"Obesity class I\",   \"BMI\",    5,         \"Obesity class II\",   \"BMI\",    6,         \"Obesity class III\",   \"BMI\",    NA,        NA_character_ )  format_basecat1n <- function(param, base) {   case_when(     param == \"BMI\" & base < 18.5 ~ 1,     param == \"BMI\" & base >= 18.5 & base < 25 ~ 2,     param == \"BMI\" & base >= 25 & base < 30 ~ 3,     param == \"BMI\" & base >= 30 & base < 35 ~ 4,     param == \"BMI\" & base >= 35 & base < 40 ~ 5,     param == \"BMI\" & base >= 40 ~ 6,     TRUE ~ NA_real_   ) } advs <- advs %>%   mutate(BASECA1N = format_basecat1n(param = PARAMCD, base = BASE)) %>%   derive_vars_merged(     basecat_lookup,     by = exprs(PARAMCD, BASECA1N)   )"},{"path":"https://pharmaverse.github.io/admiralmetabolic/articles/advs.html","id":"crit_vars","dir":"Articles","previous_headings":"Programming Workflow > Common Metabolic Endpoints","what":"Derive Criterion Variables (CRITy, CRITyFL, CRITyFLN)","title":"Creating a Metabolic ADVS ADaM","text":"deriving criterion variables (CRITy, CRITyFL, CRITyFLN) admiral provides derive_vars_crit_flag(). ensures derived ADaM-compliant way (see documentation function details). cases criterion depends parameter. following example, criterion flags weight based percentage change weight reduction baseline derived. Additional criterion flags can added needed.","code":"advs <- advs %>%   derive_vars_crit_flag(     condition = PCHG <= -5 & PARAMCD == \"WEIGHT\",     description = \"Achievement of ≥ 5% weight reduction from baseline\",     crit_nr = 1,     values_yn = TRUE,     create_numeric_flag = FALSE   ) %>%   derive_vars_crit_flag(     condition = PCHG <= -10 & PARAMCD == \"WEIGHT\",     description = \"Achievement of ≥ 10% weight reduction from baseline\",     crit_nr = 2,     values_yn = TRUE,     create_numeric_flag = FALSE   )"},{"path":"https://pharmaverse.github.io/admiralmetabolic/articles/advs.html","id":"advs_end","dir":"Articles","previous_headings":"Programming Workflow","what":"Remaining ADVS Set-up","title":"Creating a Metabolic ADVS ADaM","text":"admiral Creating BDS Finding ADaM vignette covers steps shown , merging parameter-level values, timing variables, analysis flags.","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralmetabolic/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Edoardo Mancini. Author, maintainer. Anders Askeland. Author.","code":""},{"path":"https://pharmaverse.github.io/admiralmetabolic/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mancini E, Askeland (2024). admiralmetabolic: Metabolism Extension Package ADaM 'R' Asset Library. R package version 0.0.0, https://github.com/pharmaverse/admiraltemplate, https://pharmaverse.github.io/admiraltemplate.","code":"@Manual{,   title = {admiralmetabolic: Metabolism Extension Package for ADaM in 'R' Asset Library},   author = {Edoardo Mancini and Anders Askeland},   year = {2024},   note = {R package version 0.0.0,     https://github.com/pharmaverse/admiraltemplate},   url = {https://pharmaverse.github.io/admiraltemplate}, }"},{"path":"https://pharmaverse.github.io/admiralmetabolic/index.html","id":"admiralmetabolic-","dir":"","previous_headings":"","what":"Metabolism Extension Package for ADaM in R Asset Library","title":"Metabolism Extension Package for ADaM in R Asset Library","text":"Metabolism extension package ADaM R Asset Library admiral","code":""},{"path":"https://pharmaverse.github.io/admiralmetabolic/index.html","id":"purpose","dir":"","previous_headings":"","what":"Purpose","title":"Metabolism Extension Package for ADaM in R Asset Library","text":"provide complementary (admiral) toolbox enables users develop specifics metabolic clinical trials.","code":""},{"path":"https://pharmaverse.github.io/admiralmetabolic/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Metabolism Extension Package for ADaM in R Asset Library","text":"install latest development version package directly GitHub use following code:","code":"if (!requireNamespace(\"remotes\", quietly = TRUE)) {   install.packages(\"remotes\") }  remotes::install_github(\"pharmaverse/admiraldev\") # This is a required dependency of {admiralmetabolic} remotes::install_github(\"pharmaverse/admiral\") # This is a required dependency of {admiralmetabolic} remotes::install_github(\"pharmaverse/admiralmetabolic\")"},{"path":"https://pharmaverse.github.io/admiralmetabolic/index.html","id":"dependencies","dir":"","previous_headings":"Installation","what":"Dependencies","title":"Metabolism Extension Package for ADaM in R Asset Library","text":"latest version package works latest versions packages stated DESCRIPTION. previous version package used, recommended use latest version dependencies point time previous version admiralmetabolic released.","code":""},{"path":"https://pharmaverse.github.io/admiralmetabolic/index.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Metabolism Extension Package for ADaM in R Asset Library","text":"Build toolbox re-usable functions utilities create metabolism-specific ADaM datasets R modular manner. functions created based upon ADaM Implementation Guide aim facilitate programming ADaM dataset standards. Initially package focus .","code":""},{"path":"https://pharmaverse.github.io/admiralmetabolic/index.html","id":"expectations","dir":"","previous_headings":"","what":"Expectations","title":"Metabolism Extension Package for ADaM in R Asset Library","text":"admiralmetabolic expected complement admiral provide functions help creation analyses required metabolic trial ADaMs.","code":""},{"path":"https://pharmaverse.github.io/admiralmetabolic/index.html","id":"references-and-documentation","dir":"","previous_headings":"","what":"References and Documentation","title":"Metabolism Extension Package for ADaM in R Asset Library","text":"Please refer References Documentation","code":""},{"path":"https://pharmaverse.github.io/admiralmetabolic/index.html","id":"r-versions","dir":"","previous_headings":"","what":"R Versions","title":"Metabolism Extension Package for ADaM in R Asset Library","text":"’s summary strategy package related R versions: R versions developers users follow admiral core package. development main branch admiral core used dependency. releasing new admiralmetabolic version must run using latest released admiral core version.","code":""},{"path":"https://pharmaverse.github.io/admiralmetabolic/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"Metabolism Extension Package for ADaM in R Asset Library","text":"use following support communications user developer community: Slack - informal discussions, Q&building user community. don’t access, use link join pharmaverse Slack workspace GitHub Issues - direct feedback, enhancement requests raising bugs","code":""},{"path":"https://pharmaverse.github.io/admiralmetabolic/reference/admiralmetabolic-package.html","id":null,"dir":"Reference","previous_headings":"","what":"admiralmetabolic: Metabolism Extension Package for ADaM in 'R' Asset Library — admiralmetabolic-package","title":"admiralmetabolic: Metabolism Extension Package for ADaM in 'R' Asset Library — admiralmetabolic-package","text":"toolbox programming Clinical Data Standards Interchange Consortium (CDISC) compliant Analysis Data Model (ADaM) datasets R. ADaM datasets mandatory part New Drug Biologics License Application submitted United States Food Drug Administration (FDA). Analysis derivations implemented accordance \"Analysis Data Model Implementation Guide\" (CDISC Analysis Data Model Team, 2021, https://www.cdisc.org/standards/foundational/adam). package extension package 'admiral' package focusing metabolism therapeutic area.","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralmetabolic/reference/admiralmetabolic-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"admiralmetabolic: Metabolism Extension Package for ADaM in 'R' Asset Library — admiralmetabolic-package","text":"Maintainer: Edoardo Mancini edoardo.mancini@roche.com Authors: Anders Askeland iakd@novonordisk.com","code":""},{"path":"https://pharmaverse.github.io/admiralmetabolic/reference/dm_metabolic.html","id":null,"dir":"Reference","previous_headings":"","what":"Example demographic dataset — dm_metabolic","title":"Example demographic dataset — dm_metabolic","text":"example Demographic SDTM dataset metabolic studies.","code":""},{"path":"https://pharmaverse.github.io/admiralmetabolic/reference/dm_metabolic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example demographic dataset — dm_metabolic","text":"","code":"dm_metabolic"},{"path":"https://pharmaverse.github.io/admiralmetabolic/reference/dm_metabolic.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example demographic dataset — dm_metabolic","text":"object class tbl_df (inherits tbl, data.frame) 5 rows 25 columns.","code":""},{"path":"https://pharmaverse.github.io/admiralmetabolic/reference/dm_metabolic.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example demographic dataset — dm_metabolic","text":"Constructed using dm {pharmaversesdtm} package","code":""},{"path":"https://pharmaverse.github.io/admiralmetabolic/reference/hello_admiral.html","id":null,"dir":"Reference","previous_headings":"","what":"Derive Extension Example — hello_admiral","title":"Derive Extension Example — hello_admiral","text":"Says hello admiral","code":""},{"path":"https://pharmaverse.github.io/admiralmetabolic/reference/hello_admiral.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derive Extension Example — hello_admiral","text":"","code":"hello_admiral(hw = TRUE)"},{"path":"https://pharmaverse.github.io/admiralmetabolic/reference/hello_admiral.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derive Extension Example — hello_admiral","text":"hw TRUE FALSE","code":""},{"path":"https://pharmaverse.github.io/admiralmetabolic/reference/hello_admiral.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Derive Extension Example — hello_admiral","text":"Happy Message","code":""},{"path":"https://pharmaverse.github.io/admiralmetabolic/reference/hello_admiral.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Derive Extension Example — hello_admiral","text":"roxygen documentation find tags family keywords. create organized sections Reference tab pkgdown website. can modify _pkgdown.yml necessary create appropriate sections necessary. ./man/roxygen/meta.R, find store family/keywords.","code":""},{"path":"https://pharmaverse.github.io/admiralmetabolic/reference/hello_admiral.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Derive Extension Example — hello_admiral","text":"","code":"hello_admiral(hw = FALSE) #> Welcome to the admiral family!"},{"path":"https://pharmaverse.github.io/admiralmetabolic/reference/vs_metabolic.html","id":null,"dir":"Reference","previous_headings":"","what":"Example vital signs dataset — vs_metabolic","title":"Example vital signs dataset — vs_metabolic","text":"example Vital Signs SDTM dataset metabolic studies.","code":""},{"path":"https://pharmaverse.github.io/admiralmetabolic/reference/vs_metabolic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example vital signs dataset — vs_metabolic","text":"","code":"vs_metabolic"},{"path":"https://pharmaverse.github.io/admiralmetabolic/reference/vs_metabolic.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example vital signs dataset — vs_metabolic","text":"object class tbl_df (inherits tbl, data.frame) 719 rows 24 columns.","code":""},{"path":"https://pharmaverse.github.io/admiralmetabolic/reference/vs_metabolic.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example vital signs dataset — vs_metabolic","text":"Constructed using vs {pharmaversesdtm} package dm_metabolic {admiralmetabolic} package","code":""},{"path":"https://pharmaverse.github.io/admiralmetabolic/news/index.html","id":"admiralmetabolic-010","dir":"Changelog","previous_headings":"","what":"admiralmetabolic 0.1.0","title":"admiralmetabolic 0.1.0","text":"Initial package release focused <<ADD INITIAL SCOPE>> Note first release start maintaining NEWS.md file every user-facing update. categorize updates title sections New Features, Updates Existing Functions, Breaking Changes, Documentation, Various. update also reference original issue adding end: (#ISSUE-NUMBER)","code":""}]
